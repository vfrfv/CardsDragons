%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -777816280, guid: 8db2fa5aebce64f458f84991f2f2a391, type: 3}
  m_Name: SVC_Luna
  m_EditorClassIdentifier: 
  _svcLunaVersion: 3
  _shaderVariants:
  - shaderCompilerPlatform: 5
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_RADIAL_UV
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_RADIAL_UV
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _ALPHABLEND_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _ALPHABLEND_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _FADING_ON
    - _
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  _usedByLunaBuild:
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_RADIAL_UV
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _CFXR_RADIAL_UV
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    passType: 13
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _FADING_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 4
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _ALPHABLEND_ON
    - _FADING_ON
  _includedShaderVariants: []
  _excludedShaderVariants: []
  version: 587
  _shaderParsedShaders:
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _GlowMin;\nuniform \tmediump float
            _GlowMax;\nuniform \tmediump float _MaxValue;\nuniform \tmediump float
            _HdrMultiply;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nmediump float u_xlat16_1;\nbool
            u_xlatb2;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy
            = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);\n    u_xlat0.x = dot(u_xlat0.xy,
            u_xlat0.xy);\n    u_xlat0.x = (-u_xlat0.x) * 4.0 + 1.0;\n    u_xlat0.x
            = max(u_xlat0.x, 0.0);\n    u_xlat16_1 = (-_GlowMin) + _GlowMax;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1 + _GlowMin;\n    u_xlat16_3 = u_xlat0.x
            * 30.0;\n    u_xlat16_3 = min(u_xlat16_3, 1.0);\n    u_xlat16_1 = max(u_xlat16_1,
            0.0);\n    u_xlat16_1 = min(u_xlat16_1, _MaxValue);\n    u_xlat16_1 =
            u_xlat16_3 * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0.w;\n   
            SV_Target0.w = min(u_xlat16_1, 1.0);\n    u_xlat0.x = log2(_HdrMultiply);\n   
            u_xlat0.x = u_xlat0.x * 0.416666657;\n    u_xlat0.x = exp2(u_xlat0.x);\n   
            u_xlat0.x = u_xlat0.x * 1.05499995 + -0.0549999997;\n    u_xlat0.x =
            max(u_xlat0.x, 0.0);\n    u_xlatb2 = 0.0<_HdrMultiply;\n    u_xlat16_1
            = (u_xlatb2) ? u_xlat0.x : 1.0;\n    SV_Target0.xyz = vec3(u_xlat16_1)
            * vs_COLOR0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _GlowMin;\nuniform \tmediump
            float _GlowMax;\nuniform \tmediump float _MaxValue;\nuniform \tmediump
            float _HdrMultiply;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump float u_xlat16_1;\nbool
            u_xlatb2;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy
            = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);\n    u_xlat0.x = dot(u_xlat0.xy,
            u_xlat0.xy);\n    u_xlat0.x = (-u_xlat0.x) * 4.0 + 1.0;\n    u_xlat0.x
            = max(u_xlat0.x, 0.0);\n    u_xlat16_1 = (-_GlowMin) + _GlowMax;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1 + _GlowMin;\n    u_xlat16_3 = u_xlat0.x
            * 30.0;\n    u_xlat16_3 = min(u_xlat16_3, 1.0);\n    u_xlat16_1 = max(u_xlat16_1,
            0.0);\n    u_xlat16_1 = min(u_xlat16_1, _MaxValue);\n    u_xlat16_1 =
            u_xlat16_3 * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0.w;\n   
            SV_Target0.w = min(u_xlat16_1, 1.0);\n    u_xlat0.x = log2(_HdrMultiply);\n   
            u_xlat0.x = u_xlat0.x * 0.416666657;\n    u_xlat0.x = exp2(u_xlat0.x);\n   
            u_xlat0.x = u_xlat0.x * 1.05499995 + -0.0549999997;\n    u_xlat0.x =
            max(u_xlat0.x, 0.0);\n    u_xlatb2 = 0.0<_HdrMultiply;\n    u_xlat16_1
            = (u_xlatb2) ? u_xlat0.x : 1.0;\n    SV_Target0.xyz = vec3(u_xlat16_1)
            * vs_COLOR0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD2.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD2.w = u_xlat1.w;\n    vs_TEXCOORD2.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 _ZBufferParams;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tmediump float _GlowMin;\nuniform
            \tmediump float _GlowMax;\nuniform \tmediump float _MaxValue;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform highp sampler2D
            _CameraDepthTexture;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump float u_xlat16_1;\nfloat u_xlat2;\nbool
            u_xlatb2;\nmediump float u_xlat16_3;\nbool u_xlatb4;\nvoid main()\n{\n   
            u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);\n    u_xlat0.x = dot(u_xlat0.xy,
            u_xlat0.xy);\n    u_xlat0.x = (-u_xlat0.x) * 4.0 + 1.0;\n    u_xlat0.x
            = max(u_xlat0.x, 0.0);\n    u_xlat16_1 = (-_GlowMin) + _GlowMax;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1 + _GlowMin;\n    u_xlat16_3 = u_xlat0.x
            * 30.0;\n    u_xlat16_3 = min(u_xlat16_3, 1.0);\n    u_xlat16_1 = max(u_xlat16_1,
            0.0);\n    u_xlat16_1 = min(u_xlat16_1, _MaxValue);\n    u_xlat16_1 =
            u_xlat16_3 * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * vs_COLOR0.w;\n   
            u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;\n    u_xlat0.x = texture2D(_CameraDepthTexture,
            u_xlat0.xy).x;\n    u_xlat2 = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;\n   
            u_xlat0.x = u_xlat0.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat2 = float(1.0) / u_xlat2;\n    u_xlatb4 = unity_OrthoParams.w==1.0;\n   
            u_xlat0.x = (u_xlatb4) ? u_xlat0.x : u_xlat2;\n    u_xlat0.x = u_xlat0.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD2.z);\n   
            u_xlat0.x = u_xlat0.x * _SoftParticlesFadeDistanceFar;\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1;\n   
            SV_Target0.w = min(u_xlat0.x, 1.0);\n    u_xlat0.x = log2(_HdrMultiply);\n   
            u_xlat0.x = u_xlat0.x * 0.416666657;\n    u_xlat0.x = exp2(u_xlat0.x);\n   
            u_xlat0.x = u_xlat0.x * 1.05499995 + -0.0549999997;\n    u_xlat0.x =
            max(u_xlat0.x, 0.0);\n    u_xlatb2 = 0.0<_HdrMultiply;\n    u_xlat16_1
            = (u_xlatb2) ? u_xlat0.x : 1.0;\n    SV_Target0.xyz = vec3(u_xlat16_1)
            * vs_COLOR0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD2.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD2.w = u_xlat1.w;\n    vs_TEXCOORD2.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4
            _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _GlowMin;\nuniform \tmediump float _GlowMax;\nuniform \tmediump
            float _MaxValue;\nuniform \tmediump float _HdrMultiply;\nuniform \tmediump
            float _SoftParticlesFadeDistanceNear;\nuniform \tmediump float _SoftParticlesFadeDistanceFar;\nUNITY_LOCATION(0)
            uniform highp sampler2D _CameraDepthTexture;\nin mediump vec4 vs_COLOR0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump float u_xlat16_1;\nfloat
            u_xlat2;\nbool u_xlatb2;\nmediump float u_xlat16_3;\nbool u_xlatb4;\nvoid
            main()\n{\n    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);\n   
            u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat0.x = (-u_xlat0.x)
            * 4.0 + 1.0;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n    u_xlat16_1 =
            (-_GlowMin) + _GlowMax;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1 + _GlowMin;\n   
            u_xlat16_3 = u_xlat0.x * 30.0;\n    u_xlat16_3 = min(u_xlat16_3, 1.0);\n   
            u_xlat16_1 = max(u_xlat16_1, 0.0);\n    u_xlat16_1 = min(u_xlat16_1,
            _MaxValue);\n    u_xlat16_1 = u_xlat16_3 * u_xlat16_1;\n    u_xlat16_1
            = u_xlat16_1 * vs_COLOR0.w;\n    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;\n   
            u_xlat0.x = texture(_CameraDepthTexture, u_xlat0.xy).x;\n    u_xlat2
            = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;\n    u_xlat0.x = u_xlat0.x
            * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat2 = float(1.0)
            / u_xlat2;\n    u_xlatb4 = unity_OrthoParams.w==1.0;\n    u_xlat0.x =
            (u_xlatb4) ? u_xlat0.x : u_xlat2;\n    u_xlat0.x = u_xlat0.x + (-_SoftParticlesFadeDistanceNear);\n   
            u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD2.z);\n    u_xlat0.x = u_xlat0.x
            * _SoftParticlesFadeDistanceFar;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1;\n    SV_Target0.w = min(u_xlat0.x,
            1.0);\n    u_xlat0.x = log2(_HdrMultiply);\n    u_xlat0.x = u_xlat0.x
            * 0.416666657;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat0.x = u_xlat0.x
            * 1.05499995 + -0.0549999997;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n   
            u_xlatb2 = 0.0<_HdrMultiply;\n    u_xlat16_1 = (u_xlatb2) ? u_xlat0.x
            : 1.0;\n    SV_Target0.xyz = vec3(u_xlat16_1) * vs_COLOR0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_GLOW_POW_P2
        - _CFXR_GLOW_POW_P4
        - _CFXR_GLOW_POW_P8
        - _FADING_ON
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _CFXR_GLOW_POW_P2
          - _CFXR_GLOW_POW_P4
          - _CFXR_GLOW_POW_P8
        - Keywords:
          - _
          - _CFXR_DISSOLVE
        - Keywords:
          - _
          - _FADING_ON
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        CompilationErrors: []
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: UniversalForward
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - _CFXR_DITHERED_SHADOWS_ON
        - _CFXR_GLOW_POW_P2
        - _CFXR_GLOW_POW_P4
        - _CFXR_GLOW_POW_P8
        - _FADING_ON
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _CFXR_GLOW_POW_P2
          - _CFXR_GLOW_POW_P4
          - _CFXR_GLOW_POW_P8
        - Keywords:
          - _
          - _CFXR_DISSOLVE
        - Keywords:
          - _
          - _FADING_ON
        - Keywords:
          - _
          - _CFXR_DITHERED_SHADOWS_ON
          - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
    ShaderPath: Assets/JMO Assets/Cartoon FX Remaster/CFXR Assets/Shaders/CFXR Particle
      Glow.cfxrshader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _CFXR_GLOW_POW_P2
    - _CFXR_GLOW_POW_P4
    - _CFXR_GLOW_POW_P8
    - _FADING_ON
    - SHADOWS_DEPTH
    - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
    - _CFXR_DITHERED_SHADOWS_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 67dfcda17071f4a41be79c4049965e67, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _RingTopOffset;\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD2;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy * (-in_TEXCOORD0.zw);\n   
            u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat6
            = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy *
            vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    gl_Position = hlslcc_mtx4x4glstate_matrix_projection[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nfloat u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n    u_xlat3
            = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) / u_xlat3;\n   
            u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x = (-u_xlat0.x)
            + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n    u_xlat0.x
            = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0) / vs_TEXCOORD1.z;\n   
            u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);\n   
            u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tfloat _RingTopOffset;\nin highp vec4 in_POSITION0;\nin
            mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD2;\nout
            mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy
            * (-in_TEXCOORD0.zw);\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n   
            u_xlat1 = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n   
            u_xlat6 = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy
            * vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    gl_Position = hlslcc_mtx4x4glstate_matrix_projection[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n    u_xlat0.x
            = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nfloat u_xlat1;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1.z) + vs_TEXCOORD1.y;\n   
            u_xlat3 = (-u_xlat0.x) + vs_TEXCOORD1.y;\n    u_xlat3 = float(1.0) /
            u_xlat3;\n    u_xlat6 = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat0.x
            = (-u_xlat0.x) + u_xlat6;\n    u_xlat6 = u_xlat6 + (-vs_TEXCOORD1.x);\n   
            u_xlat0.x = u_xlat3 * u_xlat0.x;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat3 = u_xlat0.x * -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat3;\n    u_xlat3 = float(1.0)
            / vs_TEXCOORD1.z;\n    u_xlat3 = u_xlat3 * u_xlat6;\n    u_xlat3 = clamp(u_xlat3,
            0.0, 1.0);\n    u_xlat6 = u_xlat3 * -2.0 + 3.0;\n    u_xlat3 = u_xlat3
            * u_xlat3;\n    u_xlat0.x = u_xlat6 * u_xlat3 + (-u_xlat0.x);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD2.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_2;\n   
            u_xlat16_0 = u_xlat0 * vs_COLOR0;\n    u_xlat1 = log2(_HdrMultiply);\n   
            u_xlat1 = u_xlat1 * 0.416666657;\n    u_xlat1 = exp2(u_xlat1);\n    u_xlat1
            = u_xlat1 * 1.05499995 + -0.0549999997;\n    u_xlat1 = max(u_xlat1, 0.0);\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * vec3(u_xlat1);\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_0.xyz;\n   
            SV_Target0.w = min(u_xlat16_0.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _RingTopOffset;\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD2;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat3;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0.xy = in_TEXCOORD0.yy * (-in_TEXCOORD0.zw);\n    u_xlat1 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_MatrixV[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixV[0]
            * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixV[2]
            * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixV[3]
            * in_POSITION0.wwww + u_xlat1;\n    u_xlat6 = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n   
            u_xlat0.xy = u_xlat0.xy * vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 =
            u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n    u_xlat2
            = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx + u_xlat2;\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz +
            u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4glstate_matrix_projection[3] * u_xlat1.wwww
            + u_xlat2;\n    gl_Position = u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n   
            vs_TEXCOORD0 = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6 / in_TEXCOORD2.w;\n   
            u_xlat0.x = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x = u_xlat0.x * u_xlat0.x;\n   
            vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n    vs_TEXCOORD1.y
            = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat3
            = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z
            * u_xlat0.x + u_xlat3;\n    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z
            * u_xlat0.z + u_xlat0.x;\n    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z
            * u_xlat0.w + u_xlat0.x;\n    vs_TEXCOORD3.z = (-u_xlat0.x);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension
            GL_OES_standard_derivatives : enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 _ZBufferParams;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tmediump float _SingleChannel;\nuniform
            \tvec4 _MainTex_ST;\nuniform \tmediump float _HdrMultiply;\nuniform \tmediump
            float _SoftParticlesFadeDistanceNear;\nuniform \tmediump float _SoftParticlesFadeDistanceFar;\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D _CameraDepthTexture;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec2
            u_xlat1;\nbool u_xlatb1;\nlowp vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nfloat
            u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nvec2 u_xlat8;\nbool u_xlatb8;\nbool
            u_xlatb9;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat0.x
            = max(abs(vs_TEXCOORD2.w), abs(vs_TEXCOORD2.z));\n    u_xlat0.x = float(1.0)
            / u_xlat0.x;\n    u_xlat4 = min(abs(vs_TEXCOORD2.w), abs(vs_TEXCOORD2.z));\n   
            u_xlat0.x = u_xlat0.x * u_xlat4;\n    u_xlat4 = u_xlat0.x * u_xlat0.x;\n   
            u_xlat8.x = u_xlat4 * 0.0208350997 + -0.0851330012;\n    u_xlat8.x =
            u_xlat4 * u_xlat8.x + 0.180141002;\n    u_xlat8.x = u_xlat4 * u_xlat8.x
            + -0.330299497;\n    u_xlat4 = u_xlat4 * u_xlat8.x + 0.999866009;\n   
            u_xlat8.x = u_xlat4 * u_xlat0.x;\n    u_xlat8.x = u_xlat8.x * -2.0 +
            1.57079637;\n    u_xlatb12 = abs(vs_TEXCOORD2.w)<abs(vs_TEXCOORD2.z);\n   
            u_xlat8.x = u_xlatb12 ? u_xlat8.x : float(0.0);\n    u_xlat0.x = u_xlat0.x
            * u_xlat4 + u_xlat8.x;\n    u_xlatb4 = vs_TEXCOORD2.w<(-vs_TEXCOORD2.w);\n   
            u_xlat4 = u_xlatb4 ? -3.14159274 : float(0.0);\n    u_xlat0.x = u_xlat4
            + u_xlat0.x;\n    u_xlat4 = min(vs_TEXCOORD2.w, vs_TEXCOORD2.z);\n   
            u_xlatb4 = u_xlat4<(-u_xlat4);\n    u_xlat8.x = max(vs_TEXCOORD2.w, vs_TEXCOORD2.z);\n   
            u_xlatb8 = u_xlat8.x>=(-u_xlat8.x);\n    u_xlatb4 = u_xlatb8 && u_xlatb4;\n   
            u_xlat0.x = (u_xlatb4) ? (-u_xlat0.x) : u_xlat0.x;\n    u_xlat0.x = u_xlat0.x
            * 0.159154937 + 0.730000019;\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD1.w);\n   
            u_xlat8.xy = (-vs_TEXCOORD1.zx) + vs_TEXCOORD1.yy;\n    u_xlat1.x = float(1.0)
            / u_xlat8.y;\n    u_xlat12 = vs_TEXCOORD1.x / u_xlat8.y;\n    u_xlat5
            = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat12 = u_xlat5 * u_xlat1.x
            + (-u_xlat12);\n    u_xlat0.y = u_xlat12 * 0.899999976 + 0.0799999833;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat12
            = dFdx(vs_TEXCOORD2.x);\n    u_xlat10_2 = texture2DGradEXT(_MainTex,
            u_xlat0.xy, vec4(vec4(u_xlat12)).xy, vec4(vec4(u_xlat12)).xy);\n    u_xlatb0
            = 0.0<_SingleChannel;\n    u_xlat16_3.xyz = (bool(u_xlatb0)) ? vec3(1.0,
            1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w = (u_xlatb0) ? u_xlat10_2.x
            : u_xlat10_2.w;\n    u_xlat0.x = (-u_xlat8.x) + u_xlat5;\n    u_xlat4
            = u_xlat5 + (-vs_TEXCOORD1.x);\n    u_xlat8.x = (-u_xlat8.x) + vs_TEXCOORD1.y;\n   
            u_xlat8.x = float(1.0) / u_xlat8.x;\n    u_xlat0.x = u_xlat8.x * u_xlat0.x;\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat8.x = u_xlat0.x *
            -2.0 + 3.0;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x =
            u_xlat0.x * u_xlat8.x;\n    u_xlat8.x = float(1.0) / vs_TEXCOORD1.z;\n   
            u_xlat4 = u_xlat8.x * u_xlat4;\n    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n   
            u_xlat8.x = u_xlat4 * -2.0 + 3.0;\n    u_xlat4 = u_xlat4 * u_xlat4;\n   
            u_xlat0.x = u_xlat8.x * u_xlat4 + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_3;\n    u_xlat16_0
            = u_xlat0 * vs_COLOR0;\n    u_xlat1.x = log2(_HdrMultiply);\n    u_xlat1.x
            = u_xlat1.x * 0.416666657;\n    u_xlat1.x = exp2(u_xlat1.x);\n    u_xlat1.x
            = u_xlat1.x * 1.05499995 + -0.0549999997;\n    u_xlat1.x = max(u_xlat1.x,
            0.0);\n    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat1.xxx;\n    u_xlatb1
            = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_3.xyz
            : u_xlat16_0.xyz;\n    u_xlat1.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n   
            u_xlat1.x = texture2D(_CameraDepthTexture, u_xlat1.xy).x;\n    u_xlat5
            = _ZBufferParams.z * u_xlat1.x + _ZBufferParams.w;\n    u_xlat1.x = u_xlat1.x
            * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat5 = float(1.0)
            / u_xlat5;\n    u_xlatb9 = unity_OrthoParams.w==1.0;\n    u_xlat1.x =
            (u_xlatb9) ? u_xlat1.x : u_xlat5;\n    u_xlat1.x = u_xlat1.x + (-_SoftParticlesFadeDistanceNear);\n   
            u_xlat1.x = u_xlat1.x + (-vs_TEXCOORD3.z);\n    u_xlat1.x = u_xlat1.x
            * _SoftParticlesFadeDistanceFar;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0,
            1.0);\n    u_xlat1.x = u_xlat16_0.w * u_xlat1.x;\n    SV_Target0.w =
            min(u_xlat1.x, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_RADIAL_UV
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tfloat _RingTopOffset;\nin highp vec4 in_POSITION0;\nin
            mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_TEXCOORD2;\nout
            mediump vec4 vs_COLOR0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat3;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0.xy = in_TEXCOORD0.yy * (-in_TEXCOORD0.zw);\n   
            u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_MatrixV[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixV[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat6
            = min(in_TEXCOORD2.x, in_TEXCOORD2.w);\n    u_xlat0.xy = u_xlat0.xy *
            vec2(u_xlat6) + u_xlat1.xy;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n   
            u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx +
            u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat1.zzzz
            + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4glstate_matrix_projection[3] *
            u_xlat1.wwww + u_xlat2;\n    gl_Position = u_xlat1;\n    vs_COLOR0 =
            in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0;\n    u_xlat0.x = u_xlat6
            / in_TEXCOORD2.w;\n    u_xlat0.x = (-u_xlat0.x) + 1.0;\n    vs_TEXCOORD1.x
            = u_xlat0.x * u_xlat0.x;\n    vs_TEXCOORD1.z = in_TEXCOORD2.y / in_TEXCOORD2.w;\n   
            vs_TEXCOORD1.y = (-_RingTopOffset) + 1.0;\n    vs_TEXCOORD1.w = in_TEXCOORD2.z;\n   
            u_xlat0.xy = in_TEXCOORD0.yy * in_TEXCOORD0.zw;\n    u_xlat0.xy = vec2(u_xlat6)
            * u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy / in_TEXCOORD2.ww;\n    vs_TEXCOORD2.zw
            = (-u_xlat0.xy) + in_TEXCOORD0.zw;\n    u_xlat0.x = in_TEXCOORD2.z;\n   
            u_xlat0.y = 0.0;\n    u_xlat0.xy = u_xlat0.xy + in_TEXCOORD0.xy;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD2.xy
            = (-u_xlat0.xy) + vec2(1.0, 1.0);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat3
            = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z
            * u_xlat0.x + u_xlat3;\n    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z
            * u_xlat0.z + u_xlat0.x;\n    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z
            * u_xlat0.w + u_xlat0.x;\n    vs_TEXCOORD3.z = (-u_xlat0.x);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4
            _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tvec4 _MainTex_ST;\nuniform \tmediump
            float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D
            _CameraDepthTexture;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nvec2 u_xlat1;\nbool u_xlatb1;\nmediump vec4 u_xlat16_2;\nmediump
            vec4 u_xlat16_3;\nfloat u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nvec2
            u_xlat8;\nbool u_xlatb8;\nbool u_xlatb9;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid
            main()\n{\n    u_xlat0.x = max(abs(vs_TEXCOORD2.w), abs(vs_TEXCOORD2.z));\n   
            u_xlat0.x = float(1.0) / u_xlat0.x;\n    u_xlat4 = min(abs(vs_TEXCOORD2.w),
            abs(vs_TEXCOORD2.z));\n    u_xlat0.x = u_xlat0.x * u_xlat4;\n    u_xlat4
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = u_xlat4 * 0.0208350997 + -0.0851330012;\n   
            u_xlat8.x = u_xlat4 * u_xlat8.x + 0.180141002;\n    u_xlat8.x = u_xlat4
            * u_xlat8.x + -0.330299497;\n    u_xlat4 = u_xlat4 * u_xlat8.x + 0.999866009;\n   
            u_xlat8.x = u_xlat4 * u_xlat0.x;\n    u_xlat8.x = u_xlat8.x * -2.0 +
            1.57079637;\n    u_xlatb12 = abs(vs_TEXCOORD2.w)<abs(vs_TEXCOORD2.z);\n   
            u_xlat8.x = u_xlatb12 ? u_xlat8.x : float(0.0);\n    u_xlat0.x = u_xlat0.x
            * u_xlat4 + u_xlat8.x;\n    u_xlatb4 = vs_TEXCOORD2.w<(-vs_TEXCOORD2.w);\n   
            u_xlat4 = u_xlatb4 ? -3.14159274 : float(0.0);\n    u_xlat0.x = u_xlat4
            + u_xlat0.x;\n    u_xlat4 = min(vs_TEXCOORD2.w, vs_TEXCOORD2.z);\n   
            u_xlatb4 = u_xlat4<(-u_xlat4);\n    u_xlat8.x = max(vs_TEXCOORD2.w, vs_TEXCOORD2.z);\n   
            u_xlatb8 = u_xlat8.x>=(-u_xlat8.x);\n    u_xlatb4 = u_xlatb8 && u_xlatb4;\n   
            u_xlat0.x = (u_xlatb4) ? (-u_xlat0.x) : u_xlat0.x;\n    u_xlat0.x = u_xlat0.x
            * 0.159154937 + 0.730000019;\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD1.w);\n   
            u_xlat8.xy = (-vs_TEXCOORD1.zx) + vs_TEXCOORD1.yy;\n    u_xlat1.x = float(1.0)
            / u_xlat8.y;\n    u_xlat12 = vs_TEXCOORD1.x / u_xlat8.y;\n    u_xlat5
            = dot(vs_TEXCOORD2.zw, vs_TEXCOORD2.zw);\n    u_xlat12 = u_xlat5 * u_xlat1.x
            + (-u_xlat12);\n    u_xlat0.y = u_xlat12 * 0.899999976 + 0.0799999833;\n   
            u_xlat0.xy = u_xlat0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat12
            = dFdx(vs_TEXCOORD2.x);\n    u_xlat16_2 = textureGrad(_MainTex, u_xlat0.xy,
            vec4(vec4(u_xlat12)).xy, vec4(vec4(u_xlat12)).xy);\n    u_xlatb0 = 0.0<_SingleChannel;\n   
            u_xlat16_3.xyz = (bool(u_xlatb0)) ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n   
            u_xlat16_3.w = (u_xlatb0) ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat0.x
            = (-u_xlat8.x) + u_xlat5;\n    u_xlat4 = u_xlat5 + (-vs_TEXCOORD1.x);\n   
            u_xlat8.x = (-u_xlat8.x) + vs_TEXCOORD1.y;\n    u_xlat8.x = float(1.0)
            / u_xlat8.x;\n    u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x =
            clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat8.x = u_xlat0.x * -2.0 + 3.0;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat8.x;\n   
            u_xlat8.x = float(1.0) / vs_TEXCOORD1.z;\n    u_xlat4 = u_xlat8.x * u_xlat4;\n   
            u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n    u_xlat8.x = u_xlat4 * -2.0 +
            3.0;\n    u_xlat4 = u_xlat4 * u_xlat4;\n    u_xlat0.x = u_xlat8.x * u_xlat4
            + (-u_xlat0.x);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0
            = u_xlat0.xxxx * u_xlat16_3;\n    u_xlat16_0 = u_xlat0 * vs_COLOR0;\n   
            u_xlat1.x = log2(_HdrMultiply);\n    u_xlat1.x = u_xlat1.x * 0.416666657;\n   
            u_xlat1.x = exp2(u_xlat1.x);\n    u_xlat1.x = u_xlat1.x * 1.05499995
            + -0.0549999997;\n    u_xlat1.x = max(u_xlat1.x, 0.0);\n    u_xlat16_3.xyz
            = u_xlat16_0.xyz * u_xlat1.xxx;\n    u_xlatb1 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_3.xyz : u_xlat16_0.xyz;\n   
            u_xlat1.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n    u_xlat1.x = texture(_CameraDepthTexture,
            u_xlat1.xy).x;\n    u_xlat5 = _ZBufferParams.z * u_xlat1.x + _ZBufferParams.w;\n   
            u_xlat1.x = u_xlat1.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat5 = float(1.0) / u_xlat5;\n    u_xlatb9 = unity_OrthoParams.w==1.0;\n   
            u_xlat1.x = (u_xlatb9) ? u_xlat1.x : u_xlat5;\n    u_xlat1.x = u_xlat1.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat1.x = u_xlat1.x + (-vs_TEXCOORD3.z);\n   
            u_xlat1.x = u_xlat1.x * _SoftParticlesFadeDistanceFar;\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat1.x = u_xlat16_0.w * u_xlat1.x;\n   
            SV_Target0.w = min(u_xlat1.x, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_RADIAL_UV
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_RADIAL_UV
        - _CFXR_WORLD_SPACE_RING
        - _FADING_ON
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _CFXR_RADIAL_UV
        - Keywords:
          - _
          - _CFXR_WORLD_SPACE_RING
        - Keywords:
          - _
          - _CFXR_DISSOLVE
        - Keywords:
          - _
          - _FADING_ON
        - Keywords:
          - _
          - _ALPHATEST_ON
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_RADIAL_UV
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_RADIAL_UV
          - _FADING_ON
        CompilationErrors: []
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: UniversalForward
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - _CFXR_DITHERED_SHADOWS_ON
        - _CFXR_RADIAL_UV
        - _CFXR_WORLD_SPACE_RING
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _CFXR_RADIAL_UV
        - Keywords:
          - _
          - _CFXR_WORLD_SPACE_RING
        - Keywords:
          - _
          - _CFXR_DISSOLVE
        - Keywords:
          - _
          - _ALPHATEST_ON
        - Keywords:
          - _
          - _CFXR_DITHERED_SHADOWS_ON
          - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
    ShaderPath: Assets/JMO Assets/Cartoon FX Remaster/CFXR Assets/Shaders/CFXR Particle
      Procedural Ring.cfxrshader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _CFXR_RADIAL_UV
    - _CFXR_WORLD_SPACE_RING
    - _FADING_ON
    - SHADOWS_DEPTH
    - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
    - _CFXR_DITHERED_SHADOWS_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_RADIAL_UV
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1581eccce46ba384596a1dce7936ab19, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_RADIAL_UV
      - _FADING_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _SingleChannel;\nuniform \tmediump
            float _HdrMultiply;\nuniform lowp sampler2D _MainTex;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0
            = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1 = in_TEXCOORD1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n   
            u_xlat0 = log2(_HdrMultiply);\n    u_xlat0 = u_xlat0 * 0.416666657;\n   
            u_xlat0 = exp2(u_xlat0);\n    u_xlat0 = u_xlat0 * 1.05499995 + -0.0549999997;\n   
            u_xlat0 = max(u_xlat0, 0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlatb3 = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3))
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3)
            ? u_xlat16_1.x : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n   
            u_xlat16_2.xyz = vec3(u_xlat0) * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            SV_Target0.w = min(u_xlat16_1.w, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 _ZBufferParams;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform lowp sampler2D
            _MainTex;\nuniform highp sampler2D _CameraDepthTexture;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nbool
            u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec4
            u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nbool u_xlatb6;\nvoid main()\n{\n   
            u_xlat0.x = log2(_HdrMultiply);\n    u_xlat0.x = u_xlat0.x * 0.416666657;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat0.x = u_xlat0.x * 1.05499995
            + -0.0549999997;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlatb3 = 0.0<_SingleChannel;\n   
            u_xlat16_2.xyz = (bool(u_xlatb3)) ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n   
            u_xlat16_2.w = (u_xlatb3) ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1
            = u_xlat16_2 * vs_COLOR0;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n   
            u_xlatb0 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb0)) ?
            u_xlat16_2.xyz : u_xlat16_1.xyz;\n    u_xlat0.xy = vs_TEXCOORD3.xy /
            vs_TEXCOORD3.ww;\n    u_xlat0.x = texture2D(_CameraDepthTexture, u_xlat0.xy).x;\n   
            u_xlat3 = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;\n    u_xlat0.x
            = u_xlat0.x * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat3
            = float(1.0) / u_xlat3;\n    u_xlatb6 = unity_OrthoParams.w==1.0;\n   
            u_xlat0.x = (u_xlatb6) ? u_xlat0.x : u_xlat3;\n    u_xlat0.x = u_xlat0.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD3.z);\n   
            u_xlat0.x = u_xlat0.x * _SoftParticlesFadeDistanceFar;\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            SV_Target0.w = min(u_xlat0.x, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4
            _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump float _SoftParticlesFadeDistanceNear;\nuniform \tmediump float
            _SoftParticlesFadeDistanceFar;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D _CameraDepthTexture;\nin
            mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nbool
            u_xlatb6;\nvoid main()\n{\n    u_xlat0.x = log2(_HdrMultiply);\n    u_xlat0.x
            = u_xlat0.x * 0.416666657;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat0.x
            = u_xlat0.x * 1.05499995 + -0.0549999997;\n    u_xlat0.x = max(u_xlat0.x,
            0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlatb3
            = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3)) ? vec3(1.0,
            1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3) ? u_xlat16_1.x
            : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            u_xlat0.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n    u_xlat0.x = texture(_CameraDepthTexture,
            u_xlat0.xy).x;\n    u_xlat3 = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;\n   
            u_xlat0.x = u_xlat0.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat3 = float(1.0) / u_xlat3;\n    u_xlatb6 = unity_OrthoParams.w==1.0;\n   
            u_xlat0.x = (u_xlatb6) ? u_xlat0.x : u_xlat3;\n    u_xlat0.x = u_xlat0.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD3.z);\n   
            u_xlat0.x = u_xlat0.x * _SoftParticlesFadeDistanceFar;\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            SV_Target0.w = min(u_xlat0.x, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform \tmediump vec4
            _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _DissolveTex;\nuniform highp sampler2D _CameraDepthTexture;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nvec2 u_xlat10;\nbvec2
            u_xlatb10;\nmediump float u_xlat16_11;\nbool u_xlatb14;\nmediump float
            u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x,
            _DissolveScroll.y);\n    u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy
            = vs_TEXCOORD0.xy * _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy
            = u_xlat0.xy + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0,
            0.0, 0.0), vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel,
            _UseDissolveOffsetUV)).xy;\n    u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy
            : vs_TEXCOORD0.xy;\n    u_xlat10_0 = texture2D(_DissolveTex, u_xlat0.xy).x;\n   
            u_xlat16_1.x = u_xlat10_0 * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x *
            vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n    u_xlat16_1.x = (u_xlatb10.y) ?
            u_xlat5 : u_xlat10_0;\n    u_xlat16_6 = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0
            = 0.0>=_InvertDissolveTex;\n    u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6
            : u_xlat16_1.x;\n    u_xlat16_6 = u_xlat16_1.x + _DissolveSmooth;\n   
            u_xlat16_1.x = u_xlat16_1.x + (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x)
            + u_xlat16_6;\n    u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11
            = _DissolveSmooth * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11
            + (-_DissolveSmooth);\n    u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_16 = u_xlat16_6 * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16,
            0.0, 1.0);\n    u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n   
            u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz
            = (u_xlatb10.x) ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w
            = (u_xlatb10.x) ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3
            * vs_COLOR0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4
            = 0.0<_DoubleDissolve;\n    u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y
            : 0.0;\n    u_xlat16_11 = u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4
            = 0.0<u_xlat16_3.x;\n    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_1.x = u_xlat16_6 * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x,
            0.0, 1.0);\n    u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x
            = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x
            + u_xlat16_16;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_1.x = (u_xlatb4) ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat4.xy
            = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n    u_xlat4.x = texture2D(_CameraDepthTexture,
            u_xlat4.xy).x;\n    u_xlat9 = _ZBufferParams.z * u_xlat4.x + _ZBufferParams.w;\n   
            u_xlat4.x = u_xlat4.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat9 = float(1.0) / u_xlat9;\n    u_xlatb14 = unity_OrthoParams.w==1.0;\n   
            u_xlat4.x = (u_xlatb14) ? u_xlat4.x : u_xlat9;\n    u_xlat4.x = u_xlat4.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat4.x = u_xlat4.x + (-vs_TEXCOORD3.z);\n   
            u_xlat4.x = u_xlat4.x * _SoftParticlesFadeDistanceFar;\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat4.x = u_xlat16_1.x * u_xlat4.x;\n   
            SV_Target0.w = min(u_xlat4.x, 1.0);\n    u_xlat4.x = log2(_HdrMultiply);\n   
            u_xlat4.x = u_xlat4.x * 0.416666657;\n    u_xlat4.x = exp2(u_xlat4.x);\n   
            u_xlat4.x = u_xlat4.x * 1.05499995 + -0.0549999997;\n    u_xlat4.x =
            max(u_xlat4.x, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat4.xxx;\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform \tmediump vec4
            _DissolveTex_ST;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _DissolveTex;\nUNITY_LOCATION(2) uniform highp
            sampler2D _CameraDepthTexture;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump
            vec4 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nmediump
            float u_xlat16_6;\nfloat u_xlat9;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nbool u_xlatb14;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n   
            u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy *
            _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy
            + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat4.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n   
            u_xlat4.x = texture(_CameraDepthTexture, u_xlat4.xy).x;\n    u_xlat9
            = _ZBufferParams.z * u_xlat4.x + _ZBufferParams.w;\n    u_xlat4.x = u_xlat4.x
            * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat9 = float(1.0)
            / u_xlat9;\n    u_xlatb14 = unity_OrthoParams.w==1.0;\n    u_xlat4.x
            = (u_xlatb14) ? u_xlat4.x : u_xlat9;\n    u_xlat4.x = u_xlat4.x + (-_SoftParticlesFadeDistanceNear);\n   
            u_xlat4.x = u_xlat4.x + (-vs_TEXCOORD3.z);\n    u_xlat4.x = u_xlat4.x
            * _SoftParticlesFadeDistanceFar;\n    u_xlat4.x = clamp(u_xlat4.x, 0.0,
            1.0);\n    u_xlat4.x = u_xlat16_1.x * u_xlat4.x;\n    SV_Target0.w =
            min(u_xlat4.x, 1.0);\n    u_xlat4.x = log2(_HdrMultiply);\n    u_xlat4.x
            = u_xlat4.x * 0.416666657;\n    u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat4.x
            = u_xlat4.x * 1.05499995 + -0.0549999997;\n    u_xlat4.x = max(u_xlat4.x,
            0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat4.xxx;\n    u_xlatb4
            = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ? u_xlat16_1.xyz
            : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 _ZBufferParams;\nuniform
            \tvec4 unity_OrthoParams;\nuniform \tmediump float _SingleChannel;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform lowp sampler2D
            _MainTex;\nuniform highp sampler2D _CameraDepthTexture;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nbool
            u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec4
            u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nbool u_xlatb6;\nvoid main()\n{\n   
            u_xlat0.x = log2(_HdrMultiply);\n    u_xlat0.x = u_xlat0.x * 0.416666657;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat0.x = u_xlat0.x * 1.05499995
            + -0.0549999997;\n    u_xlat0.x = max(u_xlat0.x, 0.0);\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlatb3 = 0.0<_SingleChannel;\n   
            u_xlat16_2.xyz = (bool(u_xlatb3)) ? vec3(1.0, 1.0, 1.0) : u_xlat10_1.xyz;\n   
            u_xlat16_2.w = (u_xlatb3) ? u_xlat10_1.x : u_xlat10_1.w;\n    u_xlat16_1
            = u_xlat16_2 * vs_COLOR0;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n   
            u_xlatb0 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb0)) ?
            u_xlat16_2.xyz : u_xlat16_1.xyz;\n    u_xlat0.xy = vs_TEXCOORD3.xy /
            vs_TEXCOORD3.ww;\n    u_xlat0.x = texture2D(_CameraDepthTexture, u_xlat0.xy).x;\n   
            u_xlat3 = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;\n    u_xlat0.x
            = u_xlat0.x * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat3
            = float(1.0) / u_xlat3;\n    u_xlatb6 = unity_OrthoParams.w==1.0;\n   
            u_xlat0.x = (u_xlatb6) ? u_xlat0.x : u_xlat3;\n    u_xlat0.x = u_xlat0.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD3.z);\n   
            u_xlat0.x = u_xlat0.x * _SoftParticlesFadeDistanceFar;\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            SV_Target0.w = min(u_xlat0.x, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4
            _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _HdrMultiply;\nuniform
            \tmediump float _SoftParticlesFadeDistanceNear;\nuniform \tmediump float
            _SoftParticlesFadeDistanceFar;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D _CameraDepthTexture;\nin
            mediump vec4 vs_COLOR0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nbool u_xlatb0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nfloat u_xlat3;\nbool u_xlatb3;\nbool
            u_xlatb6;\nvoid main()\n{\n    u_xlat0.x = log2(_HdrMultiply);\n    u_xlat0.x
            = u_xlat0.x * 0.416666657;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat0.x
            = u_xlat0.x * 1.05499995 + -0.0549999997;\n    u_xlat0.x = max(u_xlat0.x,
            0.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlatb3
            = 0.0<_SingleChannel;\n    u_xlat16_2.xyz = (bool(u_xlatb3)) ? vec3(1.0,
            1.0, 1.0) : u_xlat16_1.xyz;\n    u_xlat16_2.w = (u_xlatb3) ? u_xlat16_1.x
            : u_xlat16_1.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlatb0 = 0.0<_HdrMultiply;\n   
            SV_Target0.xyz = (bool(u_xlatb0)) ? u_xlat16_2.xyz : u_xlat16_1.xyz;\n   
            u_xlat0.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n    u_xlat0.x = texture(_CameraDepthTexture,
            u_xlat0.xy).x;\n    u_xlat3 = _ZBufferParams.z * u_xlat0.x + _ZBufferParams.w;\n   
            u_xlat0.x = u_xlat0.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat3 = float(1.0) / u_xlat3;\n    u_xlatb6 = unity_OrthoParams.w==1.0;\n   
            u_xlat0.x = (u_xlatb6) ? u_xlat0.x : u_xlat3;\n    u_xlat0.x = u_xlat0.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD3.z);\n   
            u_xlat0.x = u_xlat0.x * _SoftParticlesFadeDistanceFar;\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            SV_Target0.w = min(u_xlat0.x, 1.0);\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform \tmediump vec4
            _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _DissolveTex;\nuniform highp sampler2D _CameraDepthTexture;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nvec2 u_xlat10;\nbvec2
            u_xlatb10;\nmediump float u_xlat16_11;\nbool u_xlatb14;\nmediump float
            u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x,
            _DissolveScroll.y);\n    u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy
            = vs_TEXCOORD0.xy * _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy
            = u_xlat0.xy + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0,
            0.0, 0.0), vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel,
            _UseDissolveOffsetUV)).xy;\n    u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy
            : vs_TEXCOORD0.xy;\n    u_xlat10_0 = texture2D(_DissolveTex, u_xlat0.xy).x;\n   
            u_xlat16_1.x = u_xlat10_0 * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x *
            vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n    u_xlat16_1.x = (u_xlatb10.y) ?
            u_xlat5 : u_xlat10_0;\n    u_xlat16_6 = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0
            = 0.0>=_InvertDissolveTex;\n    u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6
            : u_xlat16_1.x;\n    u_xlat16_6 = u_xlat16_1.x + _DissolveSmooth;\n   
            u_xlat16_1.x = u_xlat16_1.x + (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x)
            + u_xlat16_6;\n    u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11
            = _DissolveSmooth * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11
            + (-_DissolveSmooth);\n    u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_16 = u_xlat16_6 * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16,
            0.0, 1.0);\n    u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n   
            u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz
            = (u_xlatb10.x) ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w
            = (u_xlatb10.x) ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3
            * vs_COLOR0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4
            = 0.0<_DoubleDissolve;\n    u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y
            : 0.0;\n    u_xlat16_11 = u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4
            = 0.0<u_xlat16_3.x;\n    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_1.x = u_xlat16_6 * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x,
            0.0, 1.0);\n    u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x
            = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x
            + u_xlat16_16;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_1.x = (u_xlatb4) ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat4.xy
            = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n    u_xlat4.x = texture2D(_CameraDepthTexture,
            u_xlat4.xy).x;\n    u_xlat9 = _ZBufferParams.z * u_xlat4.x + _ZBufferParams.w;\n   
            u_xlat4.x = u_xlat4.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat9 = float(1.0) / u_xlat9;\n    u_xlatb14 = unity_OrthoParams.w==1.0;\n   
            u_xlat4.x = (u_xlatb14) ? u_xlat4.x : u_xlat9;\n    u_xlat4.x = u_xlat4.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat4.x = u_xlat4.x + (-vs_TEXCOORD3.z);\n   
            u_xlat4.x = u_xlat4.x * _SoftParticlesFadeDistanceFar;\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat4.x = u_xlat16_1.x * u_xlat4.x;\n   
            SV_Target0.w = min(u_xlat4.x, 1.0);\n    u_xlat4.x = log2(_HdrMultiply);\n   
            u_xlat4.x = u_xlat4.x * 0.416666657;\n    u_xlat4.x = exp2(u_xlat4.x);\n   
            u_xlat4.x = u_xlat4.x * 1.05499995 + -0.0549999997;\n    u_xlat4.x =
            max(u_xlat4.x, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat4.xxx;\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform \tmediump vec4
            _DissolveTex_ST;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _DissolveTex;\nUNITY_LOCATION(2) uniform highp
            sampler2D _CameraDepthTexture;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump
            vec4 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nmediump
            float u_xlat16_6;\nfloat u_xlat9;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nbool u_xlatb14;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n   
            u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy *
            _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy
            + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat4.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n   
            u_xlat4.x = texture(_CameraDepthTexture, u_xlat4.xy).x;\n    u_xlat9
            = _ZBufferParams.z * u_xlat4.x + _ZBufferParams.w;\n    u_xlat4.x = u_xlat4.x
            * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat9 = float(1.0)
            / u_xlat9;\n    u_xlatb14 = unity_OrthoParams.w==1.0;\n    u_xlat4.x
            = (u_xlatb14) ? u_xlat4.x : u_xlat9;\n    u_xlat4.x = u_xlat4.x + (-_SoftParticlesFadeDistanceNear);\n   
            u_xlat4.x = u_xlat4.x + (-vs_TEXCOORD3.z);\n    u_xlat4.x = u_xlat4.x
            * _SoftParticlesFadeDistanceFar;\n    u_xlat4.x = clamp(u_xlat4.x, 0.0,
            1.0);\n    u_xlat4.x = u_xlat16_1.x * u_xlat4.x;\n    SV_Target0.w =
            min(u_xlat4.x, 1.0);\n    u_xlat4.x = log2(_HdrMultiply);\n    u_xlat4.x
            = u_xlat4.x * 0.416666657;\n    u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat4.x
            = u_xlat4.x * 1.05499995 + -0.0549999997;\n    u_xlat4.x = max(u_xlat4.x,
            0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat4.xxx;\n    u_xlatb4
            = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ? u_xlat16_1.xyz
            : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nattribute
            highp vec4 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Time;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform \tmediump vec4
            _DissolveTex_ST;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _DissolveTex;\nuniform highp sampler2D _CameraDepthTexture;\nvarying
            mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump float u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec4 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nfloat
            u_xlat5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nvec2 u_xlat10;\nbvec2
            u_xlatb10;\nmediump float u_xlat16_11;\nbool u_xlatb14;\nmediump float
            u_xlat16_16;\nvoid main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x,
            _DissolveScroll.y);\n    u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy
            = vs_TEXCOORD0.xy * _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy
            = u_xlat0.xy + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0,
            0.0, 0.0), vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel,
            _UseDissolveOffsetUV)).xy;\n    u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy
            : vs_TEXCOORD0.xy;\n    u_xlat10_0 = texture2D(_DissolveTex, u_xlat0.xy).x;\n   
            u_xlat16_1.x = u_xlat10_0 * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x *
            vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n    u_xlat16_1.x = (u_xlatb10.y) ?
            u_xlat5 : u_xlat10_0;\n    u_xlat16_6 = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0
            = 0.0>=_InvertDissolveTex;\n    u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6
            : u_xlat16_1.x;\n    u_xlat16_6 = u_xlat16_1.x + _DissolveSmooth;\n   
            u_xlat16_1.x = u_xlat16_1.x + (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x)
            + u_xlat16_6;\n    u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11
            = _DissolveSmooth * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11
            + (-_DissolveSmooth);\n    u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_16 = u_xlat16_6 * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16,
            0.0, 1.0);\n    u_xlat16_2 = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2;\n   
            u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz
            = (u_xlatb10.x) ? vec3(1.0, 1.0, 1.0) : u_xlat10_2.xyz;\n    u_xlat16_3.w
            = (u_xlatb10.x) ? u_xlat10_2.x : u_xlat10_2.w;\n    u_xlat16_0 = u_xlat16_3
            * vs_COLOR0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4
            = 0.0<_DoubleDissolve;\n    u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y
            : 0.0;\n    u_xlat16_11 = u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4
            = 0.0<u_xlat16_3.x;\n    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n   
            u_xlat16_1.x = u_xlat16_6 * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x,
            0.0, 1.0);\n    u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x
            = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x
            + u_xlat16_16;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_1.x = (u_xlatb4) ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat4.xy
            = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n    u_xlat4.x = texture2D(_CameraDepthTexture,
            u_xlat4.xy).x;\n    u_xlat9 = _ZBufferParams.z * u_xlat4.x + _ZBufferParams.w;\n   
            u_xlat4.x = u_xlat4.x * _ProjectionParams.z + _ProjectionParams.y;\n   
            u_xlat9 = float(1.0) / u_xlat9;\n    u_xlatb14 = unity_OrthoParams.w==1.0;\n   
            u_xlat4.x = (u_xlatb14) ? u_xlat4.x : u_xlat9;\n    u_xlat4.x = u_xlat4.x
            + (-_SoftParticlesFadeDistanceNear);\n    u_xlat4.x = u_xlat4.x + (-vs_TEXCOORD3.z);\n   
            u_xlat4.x = u_xlat4.x * _SoftParticlesFadeDistanceFar;\n    u_xlat4.x
            = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat4.x = u_xlat16_1.x * u_xlat4.x;\n   
            SV_Target0.w = min(u_xlat4.x, 1.0);\n    u_xlat4.x = log2(_HdrMultiply);\n   
            u_xlat4.x = u_xlat4.x * 0.416666657;\n    u_xlat4.x = exp2(u_xlat4.x);\n   
            u_xlat4.x = u_xlat4.x * 1.05499995 + -0.0549999997;\n    u_xlat4.x =
            max(u_xlat4.x, 0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat4.xxx;\n   
            u_xlatb4 = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ?
            u_xlat16_1.xyz : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec4 in_TEXCOORD0;\nin
            highp vec4 in_TEXCOORD1;\nout mediump vec4 vs_COLOR0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD0 = in_TEXCOORD0.xyxy;\n    vs_TEXCOORD1
            = in_TEXCOORD1;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 _ZBufferParams;\nuniform \tvec4 unity_OrthoParams;\nuniform \tmediump
            float _SingleChannel;\nuniform \tmediump float _UseDissolveOffsetUV;\nuniform
            \tmediump float _InvertDissolveTex;\nuniform \tmediump float _DoubleDissolve;\nuniform
            \tmediump vec2 _DissolveScroll;\nuniform \tmediump float _DissolveSmooth;\nuniform
            \tmediump float _HdrMultiply;\nuniform \tmediump float _SoftParticlesFadeDistanceNear;\nuniform
            \tmediump float _SoftParticlesFadeDistanceFar;\nuniform \tmediump vec4
            _DissolveTex_ST;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _DissolveTex;\nUNITY_LOCATION(2) uniform highp
            sampler2D _CameraDepthTexture;\nin mediump vec4 vs_COLOR0;\nin highp
            vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nmediump vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump
            vec4 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nfloat u_xlat5;\nmediump
            float u_xlat16_6;\nfloat u_xlat9;\nvec2 u_xlat10;\nbvec2 u_xlatb10;\nmediump
            float u_xlat16_11;\nbool u_xlatb14;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat0.xy = _Time.yy * vec2(_DissolveScroll.x, _DissolveScroll.y);\n   
            u_xlat0.xy = fract(u_xlat0.xy);\n    u_xlat10.xy = vs_TEXCOORD0.xy *
            _DissolveTex_ST.xy + _DissolveTex_ST.zw;\n    u_xlat0.xy = u_xlat0.xy
            + u_xlat10.xy;\n    u_xlatb10.xy = lessThan(vec4(0.0, 0.0, 0.0, 0.0),
            vec4(_SingleChannel, _UseDissolveOffsetUV, _SingleChannel, _UseDissolveOffsetUV)).xy;\n   
            u_xlat0.xy = (u_xlatb10.y) ? u_xlat0.xy : vs_TEXCOORD0.xy;\n    u_xlat16_0.x
            = texture(_DissolveTex, u_xlat0.xy).x;\n    u_xlat16_1.x = u_xlat16_0.x
            * 2.0 + -1.0;\n    u_xlat5 = u_xlat16_1.x * vs_TEXCOORD1.z + vs_TEXCOORD0.x;\n   
            u_xlat16_1.x = (u_xlatb10.y) ? u_xlat5 : u_xlat16_0.x;\n    u_xlat16_6
            = (-u_xlat16_1.x) + 1.0;\n    u_xlatb0 = 0.0>=_InvertDissolveTex;\n   
            u_xlat16_1.x = (u_xlatb0) ? u_xlat16_6 : u_xlat16_1.x;\n    u_xlat16_6
            = u_xlat16_1.x + _DissolveSmooth;\n    u_xlat16_1.x = u_xlat16_1.x +
            (-_DissolveSmooth);\n    u_xlat16_6 = (-u_xlat16_1.x) + u_xlat16_6;\n   
            u_xlat16_6 = float(1.0) / u_xlat16_6;\n    u_xlat16_11 = _DissolveSmooth
            * 2.0 + 1.0;\n    u_xlat16_11 = vs_TEXCOORD1.x * u_xlat16_11 + (-_DissolveSmooth);\n   
            u_xlat16_16 = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_16 = u_xlat16_6
            * u_xlat16_16;\n    u_xlat16_16 = clamp(u_xlat16_16, 0.0, 1.0);\n   
            u_xlat16_2.x = u_xlat16_16 * -2.0 + 3.0;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_16;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_2.x;\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_3.xyz = (u_xlatb10.x)
            ? vec3(1.0, 1.0, 1.0) : u_xlat16_2.xyz;\n    u_xlat16_3.w = (u_xlatb10.x)
            ? u_xlat16_2.x : u_xlat16_2.w;\n    u_xlat16_0 = u_xlat16_3 * vs_COLOR0;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_0.w;\n    u_xlatb4 = 0.0<_DoubleDissolve;\n   
            u_xlat16_3.x = (u_xlatb4) ? vs_TEXCOORD1.y : 0.0;\n    u_xlat16_11 =
            u_xlat16_11 + (-u_xlat16_3.x);\n    u_xlatb4 = 0.0<u_xlat16_3.x;\n   
            u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;\n    u_xlat16_1.x = u_xlat16_6
            * u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n   
            u_xlat16_6 = u_xlat16_1.x * -2.0 + 3.0;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat16_1.x;\n    u_xlat16_1.x = (-u_xlat16_6) * u_xlat16_1.x + u_xlat16_16;\n   
            u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (u_xlatb4)
            ? u_xlat16_1.x : u_xlat16_16;\n    u_xlat4.xy = vs_TEXCOORD3.xy / vs_TEXCOORD3.ww;\n   
            u_xlat4.x = texture(_CameraDepthTexture, u_xlat4.xy).x;\n    u_xlat9
            = _ZBufferParams.z * u_xlat4.x + _ZBufferParams.w;\n    u_xlat4.x = u_xlat4.x
            * _ProjectionParams.z + _ProjectionParams.y;\n    u_xlat9 = float(1.0)
            / u_xlat9;\n    u_xlatb14 = unity_OrthoParams.w==1.0;\n    u_xlat4.x
            = (u_xlatb14) ? u_xlat4.x : u_xlat9;\n    u_xlat4.x = u_xlat4.x + (-_SoftParticlesFadeDistanceNear);\n   
            u_xlat4.x = u_xlat4.x + (-vs_TEXCOORD3.z);\n    u_xlat4.x = u_xlat4.x
            * _SoftParticlesFadeDistanceFar;\n    u_xlat4.x = clamp(u_xlat4.x, 0.0,
            1.0);\n    u_xlat4.x = u_xlat16_1.x * u_xlat4.x;\n    SV_Target0.w =
            min(u_xlat4.x, 1.0);\n    u_xlat4.x = log2(_HdrMultiply);\n    u_xlat4.x
            = u_xlat4.x * 0.416666657;\n    u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat4.x
            = u_xlat4.x * 1.05499995 + -0.0549999997;\n    u_xlat4.x = max(u_xlat4.x,
            0.0);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat4.xxx;\n    u_xlatb4
            = 0.0<_HdrMultiply;\n    SV_Target0.xyz = (bool(u_xlatb4)) ? u_xlat16_1.xyz
            : u_xlat16_0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 1
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: UniversalForward
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_EDGE_FADING
        - _CFXR_FONT_COLORS
        - _CFXR_LIGHTING_ALL
        - _CFXR_LIGHTING_BACK
        - _CFXR_LIGHTING_DIRECT
        - _CFXR_LIGHTING_INDIRECT
        - _CFXR_LIGHTING_WPOS_OFFSET
        - _CFXR_OVERLAYTEX_1X
        - _CFXR_OVERLAYTEX_2X
        - _CFXR_SECONDCOLOR_LERP
        - _CFXR_UV_DISTORTION
        - _EMISSION
        - _FADING_ON
        - _FLIPBOOK_BLENDING
        - _NORMALMAP
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - _CFXR_DISSOLVE
        - Keywords:
          - _
          - _CFXR_SECONDCOLOR_LERP
          - _CFXR_FONT_COLORS
        - Keywords:
          - _
          - _CFXR_EDGE_FADING
        - Keywords:
          - _
          - _CFXR_LIGHTING_DIRECT
          - _CFXR_LIGHTING_INDIRECT
          - _CFXR_LIGHTING_ALL
        - Keywords:
          - _
          - _CFXR_LIGHTING_WPOS_OFFSET
        - Keywords:
          - _
          - _CFXR_LIGHTING_BACK
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _EMISSION
        - Keywords:
          - _
          - _FADING_ON
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _ALPHABLEND_ON
          - _
        - shaderCompilerPlatform: 5
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _
        - shaderCompilerPlatform: 9
          shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
          passType: 13
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _CFXR_ADDITIVE
          - _CFXR_DISSOLVE
          - _FADING_ON
          - _
        CompilationErrors: []
        HasDepthReader: 1
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: UniversalForward
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _CFXR_ADDITIVE
        - _CFXR_DISSOLVE
        - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - _CFXR_DITHERED_SHADOWS_ON
        - _CFXR_OVERLAYTEX_1X
        - _CFXR_OVERLAYTEX_2X
        - _CFXR_UV_DISTORTION
        - _FLIPBOOK_BLENDING
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _CFXR_DISSOLVE
        - Keywords:
          - _
          - _CFXR_DITHERED_SHADOWS_ON
          - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
    ShaderPath: Assets/JMO Assets/Cartoon FX Remaster/CFXR Assets/Shaders/CFXR Particle
      Ubershader.cfxrshader
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _CFXR_ADDITIVE
    - _CFXR_DISSOLVE
    - _CFXR_EDGE_FADING
    - _CFXR_FONT_COLORS
    - _CFXR_LIGHTING_ALL
    - _CFXR_LIGHTING_BACK
    - _CFXR_LIGHTING_DIRECT
    - _CFXR_LIGHTING_INDIRECT
    - _CFXR_LIGHTING_WPOS_OFFSET
    - _CFXR_OVERLAYTEX_1X
    - _CFXR_OVERLAYTEX_2X
    - _CFXR_SECONDCOLOR_LERP
    - _CFXR_UV_DISTORTION
    - _EMISSION
    - _FADING_ON
    - _FLIPBOOK_BLENDING
    - _NORMALMAP
    - SHADOWS_DEPTH
    - _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE
    - _CFXR_DITHERED_SHADOWS_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _ALPHABLEND_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _ALPHABLEND_ON
      - _
    - shaderCompilerPlatform: 5
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_ADDITIVE
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _
    - shaderCompilerPlatform: 9
      shader: {fileID: -6465566751694194690, guid: 1a29b4d27eb8b04479ef89c00dea533d, type: 3}
      passType: 13
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _CFXR_ADDITIVE
      - _CFXR_DISSOLVE
      - _FADING_ON
      - _
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Color;\nuniform highp sampler2D _MainTex;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvoid
            main()\n{\n    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0
            = u_xlat0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            highp sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvoid main()\n{\n   
            u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0
            * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: DepthNormalsOnly
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: DepthOnly
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
    ShaderPath: Library/unity default resources
    ShaderDefinedKeywords: []
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump float
            u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n       
            u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz
            = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - _
          - POINT
          - SPOT
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: Vertex
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform
            \tvec4 unity_Lightmap_ST;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_TEXCOORD1;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform \tmediump
            vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform mediump sampler2D
            unity_Lightmap;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture2D(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat10_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_TEXCOORD1;\nin
            highp vec3 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2
            vs_TEXCOORD1;\nout highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D unity_Lightmap;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec2 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: GRABPASS
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: _GrabTexture
        PlatformMask: 512
      - Shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - PROCEDURAL_INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _REQUIRE_UV2
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          - PROCEDURAL_INSTANCING_ON
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          - _ALPHAMODULATE_ON
        - Keywords:
          - _
          - _REQUIRE_UV2
        - Keywords:
          - SHADOWS_DEPTH
        - Keywords:
          - SHADOWS_CUBE
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: PreviewType
          Value: Plane
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD1.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz
            * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 4
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD1;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat16_1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 4
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz
            * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 4
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat16_1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 4
          SubShaderIndex: 0
          Keywords:
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ProjectionParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position
            = u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _CameraFadeParams;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nfloat u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlat0 = vs_TEXCOORD3.z + (-_CameraFadeParams.x);\n   
            u_xlat0 = u_xlat0 * _CameraFadeParams.y;\n    u_xlat0 = clamp(u_xlat0,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD1.xy);\n   
            u_xlat16_1 = u_xlat10_1 * _Color;\n    u_xlat1 = u_xlat16_1 * vs_COLOR0;\n   
            u_xlat1.w = u_xlat0 * u_xlat1.w;\n    SV_Target0 = u_xlat1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 4
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat2;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat1;\n    vs_COLOR0
            = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat2 = u_xlat0.y * hlslcc_mtx4x4unity_MatrixV[1].z;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat0.x + u_xlat2;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat0.z + u_xlat0.x;\n   
            u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat0.w + u_xlat0.x;\n   
            vs_TEXCOORD3.z = (-u_xlat0.x);\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n   
            u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5,
            0.5);\n    vs_TEXCOORD3.w = u_xlat1.w;\n    vs_TEXCOORD3.xy = u_xlat0.zz
            + u_xlat0.xw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _Color;\nuniform \tvec4
            _CameraFadeParams;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nfloat u_xlat0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat0 = vs_TEXCOORD3.z + (-_CameraFadeParams.x);\n   
            u_xlat0 = u_xlat0 * _CameraFadeParams.y;\n    u_xlat0 = clamp(u_xlat0,
            0.0, 1.0);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD1.xy);\n   
            u_xlat16_1 = u_xlat16_1 * _Color;\n    u_xlat1 = u_xlat16_1 * vs_COLOR0;\n   
            u_xlat1.w = u_xlat0 * u_xlat1.w;\n    SV_Target0 = u_xlat1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 4
          SubShaderIndex: 0
          Keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PerformanceChecks
            Value: False
          - Key: PreviewType
            Value: Plane
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - EFFECT_BUMP
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - PROCEDURAL_INSTANCING_ON
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAMODULATE_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _COLORADDSUBDIFF_ON
        - _COLORCOLOR_ON
        - _COLOROVERLAY_ON
        - _EMISSION
        - _FADING_ON
        - _NORMALMAP
        - _REQUIRE_UV2
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - Keywords:
          - __
          - INSTANCING_ON
          - PROCEDURAL_INSTANCING_ON
        - Keywords:
          - _
          - _NORMALMAP
        - Keywords:
          - _
          - _FADING_ON
        - Keywords:
          - _
          - _REQUIRE_UV2
        - Keywords:
          - _
          - EFFECT_BUMP
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 4
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 4
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 4
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 4
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _FADING_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 4
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 4
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _ALPHABLEND_ON
          - _FADING_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 4
        SubShaderIndex: 0
        SerializedObjectId: 4
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PerformanceChecks
          Value: False
        - Key: PreviewType
          Value: Plane
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PerformanceChecks
        Value: False
      - Key: PreviewType
        Value: Plane
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - SHADOWS_DEPTH
    - _ALPHABLEND_ON
    - _ALPHAMODULATE_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _REQUIRE_UV2
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - _COLORADDSUBDIFF_ON
    - _COLORCOLOR_ON
    - _COLOROVERLAY_ON
    - _EMISSION
    - _FADING_ON
    - _NORMALMAP
    - INSTANCING_ON
    - PROCEDURAL_INSTANCING_ON
    - SHADOWS_CUBE
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    - _
    - EFFECT_BUMP
    - SOFTPARTICLES_ON
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 4
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 4
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 4
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 4
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _FADING_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 4
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _FADING_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 211, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 4
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _ALPHABLEND_ON
      - _FADING_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nfloat unity_roundEven(float x) { float
            y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2
            unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x);
            a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4
            unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = unity_roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nbool u_xlatb3;\nfloat
            unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x ==
            0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x
            = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3
            unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x
            = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            float u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n    u_xlat16_0.x =
            vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float
            u_xlat16_1;\nvec4 u_xlat2;\nlowp vec4 u_xlat10_2;\nmediump float u_xlat16_4;\nfloat
            unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x ==
            0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x
            = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3
            unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 =
            vs_COLOR0.w * 255.0;\n    u_xlat16_4 = unity_roundEven(u_xlat16_4);\n   
            u_xlat16_0.w = u_xlat16_4 * 0.00392156886;\n    u_xlat10_2 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat2 = u_xlat10_2 + _TextureSampleAdd;\n   
            u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat2;\n   
            u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n    SV_Target0.xyz = u_xlat0.xyz
            * vec3(u_xlat16_1);\n    SV_Target0.w = u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump float
            u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy
            * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n   
            u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 = vs_COLOR0.w * 255.0;\n   
            u_xlat16_4 = roundEven(u_xlat16_4);\n    u_xlat16_0.w = u_xlat16_4 *
            0.00392156886;\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat2 = u_xlat16_2 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat2;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n   
            SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w =
            u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nlowp
            vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nfloat unity_roundEven(float x) { float y = floor(x
            + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2
            a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a;
            }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x
            = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat1;\n   
            u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n   
            u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y
            * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2 + -0.00100000005;\n   
            u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz = u_xlat0.xyz
            * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n    u_xlatb1 = u_xlat16_5<0.0;\n   
            if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n   
            u_xlat16_0.x = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x
            * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy
            * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2
            + -0.00100000005;\n    u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz
            = u_xlat0.xyz * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - _
        KeywordGroups:
        - Keywords:
          - _
          - UNITY_UI_CLIP_RECT
        - Keywords:
          - _
          - UNITY_UI_ALPHACLIP
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
  _modifiedShaders: []
  invalidShaders: 0
  _sceneLightData:
    PointLightCount: 0
    SpotLightCount: 0
    DirectionalLightCount: 0
    LightmapOn: 0
    DirlightmapCombined: 0
    DirectionalCookieExists: 0
    PointCookieExists: 0
    SpotCookieExists: 0
    AddiitonalLightsKeywordRequired: 1
